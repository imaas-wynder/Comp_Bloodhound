app CompBloodhound {
  wasp: {
    version: "^0.11.1"
  },
  title: "CompBloodhound",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int      @id @default(autoincrement())
    username String   @unique
    password String
    searches Search[]
psl=}

entity Search {=psl
    id      Int      @id @default(autoincrement())
    query   String
    results Result[]
    user    User     @relation(fields: [userId], references: [id])
    userId  Int
psl=}

entity Result {=psl
    id       Int    @id @default(autoincrement())
    url      String
    type     String
    content  String
    search   Search @relation(fields: [searchId], references: [id])
    searchId Int
psl=}

action createSearch {
  fn: import { createSearch } from "@server/actions.js",
  entities: [Search]
}

action addResult {
  fn: import { addResult } from "@server/actions.js",
  entities: [Result, Search]
}

query getSearch {
  fn: import { getSearch } from "@server/queries.js",
  entities: [Search]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: false
}

route SearchRoute { path: "/search/:searchId", to: SearchPage }
page SearchPage {
  component: import { Search } from "@client/pages/Search.jsx",
  authRequired: true
}